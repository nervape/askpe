server {
    listen 80;
    # Domain configuration
    server_name ask.nvap.app;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    # Domain configuration
    server_name ask.nvap.app;

    # SSL configuration
    ssl_certificate /etc/nginx/ssl/ask.nvap.app.crt;
    ssl_certificate_key /etc/nginx/ssl/ask.nvap.app.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-XSS-Protection "1; mode=block";
    
    # Basic authentication (direct in config)
    auth_basic "Restricted Access";
    
    # Password is set directly in the config file
    # Username: oracle, Password: ASKING-THE-APE
    auth_basic_user_file /etc/nginx/conf.d/.htpasswd-ape-oracle;
    
    # Reverse proxy configuration for Socket.IO
    location /socket.io/ {
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect off;
        proxy_pass http://app:3000/socket.io/;
        # Increase timeouts for long-running connections
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Reverse proxy configuration for Next.js app
    location / {
        proxy_pass http://app:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|webp|svg|ico)$ {
        proxy_pass http://app:3000;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Allow health checks without authentication
    location /api/health {
        auth_basic off;
        proxy_pass http://app:3000/api/health;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Error pages
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 